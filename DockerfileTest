# Use a lightweight Node.js image to build the application
FROM node:18-alpine3.19 AS build

# Set working directory inside the container
WORKDIR /usr/local/app

# Copy the package.json and package-lock.json to the working directory
COPY package*.json ./


# Install project dependencies
RUN npm install

# Copy all the source files to the working directory
COPY . .

RUN if [ -f "package.lock.json" ]; then rm package.lock.json; fi

# Build the application using Parcel (assuming the build command is set in package.json)
RUN npm install && npm run build && rm -rf node_modules  


#REMOVE node_modules and package.json if they exists
#RUN rm -rf node_modules
#RUN if [ -f "package.lock.json" ]; then rm package.lock.json; fi


# Start a new stage from a minimal image
FROM nginx:alpine

# Copy the built files from the previous stage to the nginx html folder
COPY --from=build /usr/local/app/build /usr/share/nginx/html

# Expose the port to be used by the container
EXPOSE 3000

# Start the Nginx server
CMD ["nginx", "-g", "daemon off;"]
